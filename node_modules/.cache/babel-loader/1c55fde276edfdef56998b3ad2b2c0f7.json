{"ast":null,"code":"var _jsxFileName = \"/Users/aika/Desktop/web_dev/client-code/src/components/containers/AllCampusesContainer.js\";\n\n/*==================================================\n/src/components/containers\\AllCampusesContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllCampusesThunk } from \"../../store/thunks\";\nimport { AllCampusesView } from \"../views\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AllCampusesContainer extends Component {\n  // Get all campuses data from back-end database\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchAllCampuses();\n  } // Render All Campuses view by passing all campuses data as props to the corresponding View component\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AllCampusesView, {\n        allCampuses: this.props.allCampuses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n} // 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"allCampuses\".\n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\n\n\nconst mapState = state => {\n  return {\n    allCampuses: state.allCampuses // Get the State object from Reducer \"allCampuses\"\n\n  };\n}; // 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\n\n\nconst mapDispatch = dispatch => {\n  return {\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk())\n  };\n}; // Type check props;\n\n\nAllCampusesContainer.propTypes = {\n  allCampuses: PropTypes.array.isRequired,\n  fetchAllCampuses: PropTypes.func.isRequired\n}; // Export store-connected container by default\n// AllCampusesContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\n\nexport default connect(mapState, mapDispatch)(AllCampusesContainer);","map":{"version":3,"names":["Header","Component","PropTypes","connect","fetchAllCampusesThunk","AllCampusesView","AllCampusesContainer","componentDidMount","console","log","props","fetchAllCampuses","render","allCampuses","mapState","state","mapDispatch","dispatch","propTypes","array","isRequired","func"],"sources":["/Users/aika/Desktop/web_dev/client-code/src/components/containers/AllCampusesContainer.js"],"sourcesContent":["/*==================================================\n/src/components/containers\\AllCampusesContainer.js\n\nThe Container component is responsible for stateful logic and data fetching, and\npasses data (if any) as props to the corresponding View component.\nIf needed, it also defines the component's \"connect\" function.\n================================================== */\nimport Header from './Header';\nimport { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { fetchAllCampusesThunk } from \"../../store/thunks\";\nimport { AllCampusesView } from \"../views\";\n\nclass AllCampusesContainer extends Component {\n  // Get all campuses data from back-end database\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchAllCampuses();\n  }\n\n  // Render All Campuses view by passing all campuses data as props to the corresponding View component\n  render() {\n    return (\n      <div>\n        <Header />\n        <AllCampusesView\n          allCampuses={this.props.allCampuses}\n        />\n      </div>\n    );\n  }\n}\n\n// 1. The \"mapState\" argument specifies the data from Redux Store that the component needs.\n// The \"mapState\" is called when the Store State changes, and it returns a data object of \"allCampuses\".\n// The following 2 input arguments are passed to the \"connect\" function used by \"AllCampusesContainer\" component to connect to Redux Store.\nconst mapState = (state) => {\n  return {\n    allCampuses: state.allCampuses,  // Get the State object from Reducer \"allCampuses\"\n  };\n};  \n// 2. The \"mapDispatch\" argument is used to dispatch Action (Redux Thunk) to Redux Store.\n// The \"mapDispatch\" calls the specific Thunk to dispatch its action. The \"dispatch\" is a function of Redux Store.\nconst mapDispatch = (dispatch) => {\n  return {\n    fetchAllCampuses: () => dispatch(fetchAllCampusesThunk()),\n  };\n};\n\n// Type check props;\nAllCampusesContainer.propTypes = {\n  allCampuses: PropTypes.array.isRequired,\n  fetchAllCampuses: PropTypes.func.isRequired,\n};\n\n// Export store-connected container by default\n// AllCampusesContainer uses \"connect\" function to connect to Redux Store and to read values from the Store \n// (and re-read the values when the Store State updates).\nexport default connect(mapState, mapDispatch)(AllCampusesContainer);"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,UAAnB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,qBAAT,QAAsC,oBAAtC;AACA,SAASC,eAAT,QAAgC,UAAhC;;;AAEA,MAAMC,oBAAN,SAAmCL,SAAnC,CAA6C;EAC3C;EACAM,iBAAiB,GAAG;IAClBC,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;IACA,KAAKA,KAAL,CAAWC,gBAAX;EACD,CAL0C,CAO3C;;;EACAC,MAAM,GAAG;IACP,oBACE;MAAA,wBACE,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,eAAD;QACE,WAAW,EAAE,KAAKF,KAAL,CAAWG;MAD1B;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAQD;;AAjB0C,C,CAoB7C;AACA;AACA;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAC1B,OAAO;IACLF,WAAW,EAAEE,KAAK,CAACF,WADd,CAC4B;;EAD5B,CAAP;AAGD,CAJD,C,CAKA;AACA;;;AACA,MAAMG,WAAW,GAAIC,QAAD,IAAc;EAChC,OAAO;IACLN,gBAAgB,EAAE,MAAMM,QAAQ,CAACb,qBAAqB,EAAtB;EAD3B,CAAP;AAGD,CAJD,C,CAMA;;;AACAE,oBAAoB,CAACY,SAArB,GAAiC;EAC/BL,WAAW,EAAEX,SAAS,CAACiB,KAAV,CAAgBC,UADE;EAE/BT,gBAAgB,EAAET,SAAS,CAACmB,IAAV,CAAeD;AAFF,CAAjC,C,CAKA;AACA;AACA;;AACA,eAAejB,OAAO,CAACW,QAAD,EAAWE,WAAX,CAAP,CAA+BV,oBAA/B,CAAf"},"metadata":{},"sourceType":"module"}